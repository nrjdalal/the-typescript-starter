name: NPM Release Canary

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  id-token: write
  contents: write
  statuses: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Release Package
        run: |
          PACKAGE_NAME=$($RUNNER json -f package.json -a name)
          VERSIONS=$(npm view $PACKAGE_NAME dist-tags --json)
          LATEST_VERSION=$(echo $VERSIONS | $RUNNER json latest)
          NEXT_VERSION=$($RUNNER semver $LATEST_VERSION -i minor)
          TAGGED_VERSION=$(echo $VERSIONS | $RUNNER json $TAG)
          NEXT_VERSION=$(if [[ $TAGGED_VERSION == $NEXT_VERSION* ]]; then $RUNNER semver $TAGGED_VERSION -i prerelease; else echo $NEXT_VERSION-$TAG.0; fi)
          $RUNNER json -I -f package.json -e "this.version=\"$NEXT_VERSION\""
          [ ! -d "node_modules" ] && $MANAGER install --frozen-lockfile
          [[ "$BUILD" = "true" ]] && $MANAGER run build

          # Publish package
          if [ "$MANAGER" = "bun" ]; then
            npm publish --provenance --access public --no-git-checks --tag $TAG
          else
            $MANAGER publish --provenance --access public --no-git-checks --tag $TAG
          fi
        env:
          TAG: canary
          MANAGER: bun
          RUNNER: bunx
          BUILD: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_REGISTRY: https://registry.npmjs.org
