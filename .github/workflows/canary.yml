name: NPM Release Canary

on:
  push:
    branches:
      - main

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  id-token: write
  contents: write
  statuses: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Release Package
        run: |
          npm i -g @antfu/ni
          PACKAGE_NAME=$(nlx json -f package.json -a name)
          PACKAGE_VERSION=$(nlx json -f package.json -a version)
          VERSIONS=$(npm view $PACKAGE_NAME dist-tags --json)
          LATEST_VERSION=$(echo $VERSIONS | nlx json latest)
          if [[ $PACKAGE_VERSION != $LATEST_VERSION ]]; then
            NEXT_VERSION=$PACKAGE_VERSION
            HAS_TAG=$(echo $PACKAGE_VERSION | grep -o '[a-zA-Z]*' | head -n 1)
            TAG=$([[ -n "$HAS_TAG" ]] && echo $HAS_TAG || echo "latest")
          else
            TAG="canary"
            NEXT_VERSION=$(nlx semver $LATEST_VERSION -i minor)
            TAGGED_VERSION=$(echo $VERSIONS | nlx json $TAG)
            NEXT_VERSION=$([[ $TAGGED_VERSION == $NEXT_VERSION* ]] && nlx semver $TAGGED_VERSION -i prerelease || echo $NEXT_VERSION-$TAG.0)
          fi
          nlx json -I -f package.json -e "this.version=\"$NEXT_VERSION\""
          [ ! -d "node_modules" ] && ni --frozen
          [[ "$BUILD" = "true" ]] && nr build
          npm publish --provenance --access public --no-git-checks --tag $TAG
        env:
          BUILD: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
